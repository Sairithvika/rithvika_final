#Take base image -alpine


docker image ls
docker pull nginx
docker pull nginx:1.11.9
docker pull nginx:1.11
docker pull nginx:1.11.9-alpine
docker image ls
docker image inspect nginx
docker pull mysql/mysql-server
docker image ls
docker pull nginx:mainline
docker image ls
docker image tag nginx sairithvika/nginx
docker image tag --help
docker image ls
docker image push sairithvika/nginx
docker --help
docker login
cat .docker/config.json
docker image push sairithvika/nginx
docker image push sairithvika/nginx sairithvika/nginx:testing
docker image ls
docker image push sairithvika/nginx:testing
docker image ls



#To copy index.html to the image built

docker container run -p 80:80 --rm nginx
docker image build -t nginx-with-html .
docker container run -p 80:80 --rm nginx-with-html
docker container run -p 80:80 --rm nginx
docker image build -t nginx-with-html .
docker container run -p 80:80 --rm nginx-with-html
docker image ls
docker image tag --help
docker image tag nginx-with-html:latest atingupta2005/nginx-with-html:latest
docker image ls
docker push




#To expose port 8080

docker container run --publish 8080:80 nginx
docker container run --publish 8080:80 --detach nginx
docker container ls
docker container stop <first three characters of given number>
docker container ls
docker container ls -a
docker container run --publish 8080:80 --detach --name webhost nginx




#Build Your Own Dockerfile and Run Containers From It

cd dockerfile-assignment-1
vim Dockerfile
docker build cmd
docker build -t testnode .
docker container run --rm -p 80:3000 testnode
docker images
docker tag --help
docker tag testnode sairithvika/testing-node
docker push --help
docker push sairithvika/testing-node
docker image ls
docker image rm sairithvika/testing-node
docker container run --rm -p 80:3000 sairithvika/testing-node


